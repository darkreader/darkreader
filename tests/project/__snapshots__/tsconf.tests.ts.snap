// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TypeScript project config file should parse and resolve correctly: src 1`] = `
Object {
  "compileOnSave": false,
  "compilerOptions": Object {
    "allowJs": true,
    "baseUrl": "./",
    "downlevelIteration": true,
    "jsx": "react",
    "jsxFactory": "m",
    "lib": Array [
      "es6",
      "es2017",
      "dom",
      "dom.iterable",
    ],
    "module": "es6",
    "moduleResolution": "node",
    "noEmit": true,
    "noImplicitAny": true,
    "resolveJsonModule": true,
    "target": "es2019",
    "types": Array [
      "chrome",
      "offscreencanvas",
    ],
  },
  "files": Array [
    "./defaults.ts",
    "./definitions.d.ts",
    "./api/chrome.ts",
    "./api/fetch.ts",
    "./api/index.ts",
    "./background/config-manager.ts",
    "./background/devtools.ts",
    "./background/extension.ts",
    "./background/icon-manager.ts",
    "./background/index.ts",
    "./background/make-chromium-happy.ts",
    "./background/messenger.ts",
    "./background/newsmaker.ts",
    "./background/tab-manager.ts",
    "./background/user-storage.ts",
    "./background/window-theme.ts",
    "./background/utils/extension-api.ts",
    "./background/utils/migration.ts",
    "./background/utils/network.ts",
    "./background/utils/state-manager.ts",
    "./generators/css-filter.ts",
    "./generators/dynamic-theme.ts",
    "./generators/modify-colors.ts",
    "./generators/static-theme.ts",
    "./generators/svg-filter.ts",
    "./generators/text-style.ts",
    "./generators/theme-engines.ts",
    "./generators/utils/format.ts",
    "./generators/utils/matrix.ts",
    "./generators/utils/parse.ts",
    "./inject/detector.ts",
    "./inject/fallback.ts",
    "./inject/index.ts",
    "./inject/style.ts",
    "./inject/svg-filter.ts",
    "./inject/dynamic-theme/adopted-style-manger.ts",
    "./inject/dynamic-theme/css-collection.ts",
    "./inject/dynamic-theme/css-rules.ts",
    "./inject/dynamic-theme/image.ts",
    "./inject/dynamic-theme/index.ts",
    "./inject/dynamic-theme/inline-style.ts",
    "./inject/dynamic-theme/meta-theme-color.ts",
    "./inject/dynamic-theme/modify-css.ts",
    "./inject/dynamic-theme/network.ts",
    "./inject/dynamic-theme/style-manager.ts",
    "./inject/dynamic-theme/stylesheet-modifier.ts",
    "./inject/dynamic-theme/stylesheet-proxy.ts",
    "./inject/dynamic-theme/variables.ts",
    "./inject/dynamic-theme/watch.ts",
    "./inject/utils/dom.ts",
    "./inject/utils/watch-color-scheme.ts",
    "./ui/utils.ts",
    "./ui/connect/connector.ts",
    "./ui/connect/mock.ts",
    "./ui/controls/index.ts",
    "./ui/controls/utils.ts",
    "./ui/controls/button/index.tsx",
    "./ui/controls/checkbox/index.tsx",
    "./ui/controls/color-dropdown/index.tsx",
    "./ui/controls/color-picker/hsb-picker.tsx",
    "./ui/controls/color-picker/index.tsx",
    "./ui/controls/dropdown/index.tsx",
    "./ui/controls/message-box/index.tsx",
    "./ui/controls/multi-switch/index.tsx",
    "./ui/controls/nav-button/index.tsx",
    "./ui/controls/overlay/index.ts",
    "./ui/controls/reset-button/index.tsx",
    "./ui/controls/select/index.tsx",
    "./ui/controls/shortcut/index.tsx",
    "./ui/controls/slider/index.tsx",
    "./ui/controls/tab-panel/index.tsx",
    "./ui/controls/tab-panel/tab.tsx",
    "./ui/controls/text-list/index.tsx",
    "./ui/controls/textbox/index.tsx",
    "./ui/controls/time-range-picker/index.tsx",
    "./ui/controls/toggle/index.tsx",
    "./ui/controls/updown/index.tsx",
    "./ui/controls/updown/track.tsx",
    "./ui/controls/virtual-scroll/index.tsx",
    "./ui/devtools/index.tsx",
    "./ui/devtools/components/body.tsx",
    "./ui/popup/compatibility.js",
    "./ui/popup/index.tsx",
    "./ui/popup/types.d.ts",
    "./ui/popup/automation-page/index.tsx",
    "./ui/popup/body/index.tsx",
    "./ui/popup/check-button/index.tsx",
    "./ui/popup/components/body.tsx",
    "./ui/popup/components/custom-settings-toggle/index.tsx",
    "./ui/popup/components/engine-switch/index.tsx",
    "./ui/popup/components/filter-settings/index.tsx",
    "./ui/popup/components/filter-settings/mode-toggle.tsx",
    "./ui/popup/components/font-settings/index.tsx",
    "./ui/popup/components/header/index.tsx",
    "./ui/popup/components/header/more-toggle-settings.tsx",
    "./ui/popup/components/loader/index.tsx",
    "./ui/popup/components/more-settings/index.tsx",
    "./ui/popup/components/news/index.tsx",
    "./ui/popup/components/site-list-settings/index.tsx",
    "./ui/popup/components/site-toggle/checkmark-icon.tsx",
    "./ui/popup/components/site-toggle/index.tsx",
    "./ui/popup/control-group/index.tsx",
    "./ui/popup/main-page/app-switch.tsx",
    "./ui/popup/main-page/help.tsx",
    "./ui/popup/main-page/index.tsx",
    "./ui/popup/main-page/site-toggle.tsx",
    "./ui/popup/main-page/sun-moon-icon.tsx",
    "./ui/popup/main-page/system-icon.tsx",
    "./ui/popup/main-page/theme-group.tsx",
    "./ui/popup/main-page/watch-icon.tsx",
    "./ui/popup/manage-settings-page/export-settings.tsx",
    "./ui/popup/manage-settings-page/export-theme.tsx",
    "./ui/popup/manage-settings-page/fetch-news.tsx",
    "./ui/popup/manage-settings-page/import-settings.tsx",
    "./ui/popup/manage-settings-page/index.tsx",
    "./ui/popup/manage-settings-page/reset-settings-button.tsx",
    "./ui/popup/manage-settings-page/sync-config.tsx",
    "./ui/popup/manage-settings-page/sync-settings.tsx",
    "./ui/popup/news-section/index.tsx",
    "./ui/popup/page-viewer/index.tsx",
    "./ui/popup/settings-page/automation-button.tsx",
    "./ui/popup/settings-page/change-browser-theme.tsx",
    "./ui/popup/settings-page/context-menus.tsx",
    "./ui/popup/settings-page/detect-dark-theme.tsx",
    "./ui/popup/settings-page/devtools.tsx",
    "./ui/popup/settings-page/enabled-by-default.tsx",
    "./ui/popup/settings-page/index.tsx",
    "./ui/popup/settings-page/mange-settings-button.tsx",
    "./ui/popup/settings-page/site-list-button.tsx",
    "./ui/popup/settings-page/version.tsx",
    "./ui/popup/site-list-page/index.tsx",
    "./ui/popup/site-list-page/site-list.tsx",
    "./ui/popup/theme/utils.ts",
    "./ui/popup/theme/controls/background-color.tsx",
    "./ui/popup/theme/controls/brightness.tsx",
    "./ui/popup/theme/controls/color-scheme.tsx",
    "./ui/popup/theme/controls/contrast.tsx",
    "./ui/popup/theme/controls/font-picker.tsx",
    "./ui/popup/theme/controls/format.ts",
    "./ui/popup/theme/controls/grayscale.tsx",
    "./ui/popup/theme/controls/immediate-modify.tsx",
    "./ui/popup/theme/controls/index.tsx",
    "./ui/popup/theme/controls/mode.tsx",
    "./ui/popup/theme/controls/reset-button.tsx",
    "./ui/popup/theme/controls/scheme.tsx",
    "./ui/popup/theme/controls/scrollbar.tsx",
    "./ui/popup/theme/controls/selection.tsx",
    "./ui/popup/theme/controls/sepia.tsx",
    "./ui/popup/theme/controls/style-system-controls.tsx",
    "./ui/popup/theme/controls/text-color.tsx",
    "./ui/popup/theme/controls/text-stroke.tsx",
    "./ui/popup/theme/controls/theme-control.tsx",
    "./ui/popup/theme/controls/use-font.tsx",
    "./ui/popup/theme/page/collapsible-panel.tsx",
    "./ui/popup/theme/page/index.tsx",
    "./ui/popup/theme/preset-picker/index.tsx",
    "./ui/popup/utils/issues.ts",
    "./ui/popup/utils/markdown.tsx",
    "./ui/stylesheet-editor/index.tsx",
    "./ui/stylesheet-editor/components/body.tsx",
    "./utils/array.ts",
    "./utils/async-queue.ts",
    "./utils/color.ts",
    "./utils/colorscheme-parser.ts",
    "./utils/debounce.ts",
    "./utils/ipv6.ts",
    "./utils/links.ts",
    "./utils/locales.ts",
    "./utils/log.ts",
    "./utils/math.ts",
    "./utils/media-query.ts",
    "./utils/message.ts",
    "./utils/network.ts",
    "./utils/parsing.ts",
    "./utils/platform.ts",
    "./utils/promise-barrier.ts",
    "./utils/text.ts",
    "./utils/throttle.ts",
    "./utils/time.ts",
    "./utils/uid.ts",
    "./utils/url.ts",
  ],
}
`;

exports[`TypeScript project config file should parse and resolve correctly: src/api 1`] = `
Object {
  "compileOnSave": false,
  "compilerOptions": Object {
    "allowJs": true,
    "baseUrl": "..",
    "downlevelIteration": true,
    "jsx": "react",
    "jsxFactory": "m",
    "lib": Array [
      "es6",
      "es2017",
      "dom",
      "dom.iterable",
    ],
    "module": "es6",
    "moduleResolution": "node",
    "noEmit": true,
    "noImplicitAny": true,
    "resolveJsonModule": true,
    "target": "es5",
    "types": Array [
      "chrome",
      "offscreencanvas",
    ],
  },
  "files": Array [
    "./chrome.ts",
    "./fetch.ts",
    "./index.ts",
  ],
}
`;

exports[`TypeScript project config file should parse and resolve correctly: tests/browser 1`] = `
Object {
  "compileOnSave": false,
  "compilerOptions": Object {
    "allowJs": true,
    "downlevelIteration": true,
    "esModuleInterop": true,
    "jsx": "react",
    "jsxFactory": "m",
    "lib": Array [
      "es6",
      "dom",
    ],
    "module": "commonjs",
    "moduleResolution": "node",
    "noEmit": true,
    "noImplicitAny": true,
    "target": "es2019",
    "types": Array [
      "chrome",
      "jest",
      "offscreencanvas",
      "puppeteer-core",
    ],
  },
  "files": Array [
    "./coverage.js",
    "./environment.js",
    "./globals.d.ts",
    "./jest.config.js",
    "./paths.js",
    "./server.js",
    "./dynamic/inline-override.tests.ts",
    "./dynamic/link-override.tests.ts",
    "./dynamic/style-override.tests.ts",
    "./e2e/devtools.tests.ts",
    "./e2e/toggle.tests.ts",
    "./settings/migration.tests.ts",
    "./settings/sitelist.tests.ts",
  ],
}
`;

exports[`TypeScript project config file should parse and resolve correctly: tests/inject 1`] = `
Object {
  "compileOnSave": false,
  "compilerOptions": Object {
    "allowJs": true,
    "downlevelIteration": true,
    "esModuleInterop": true,
    "inlineSources": true,
    "jsx": "react",
    "jsxFactory": "m",
    "lib": Array [
      "es6",
      "es2017",
      "dom",
      "dom.iterable",
    ],
    "module": "es6",
    "moduleResolution": "node",
    "noEmit": true,
    "noEmitOnError": true,
    "noImplicitAny": true,
    "removeComments": false,
    "sourceMap": true,
    "target": "es2019",
    "types": Array [
      "chrome",
      "offscreencanvas",
      "jasmine",
    ],
  },
  "exclude": Array [
    "./coverage",
  ],
  "files": Array [
    "./karma.conf.ci.js",
    "./karma.conf.js",
    "./types.d.ts",
    "./dynamic/color.tests.ts",
    "./dynamic/fixes.tests.ts",
    "./dynamic/image-analysis.tests.ts",
    "./dynamic/inline-override.tests.ts",
    "./dynamic/link-override.tests.ts",
    "./dynamic/media-query.tests.ts",
    "./dynamic/shadow-dom.tests.ts",
    "./dynamic/style-override.tests.ts",
    "./dynamic/variables.tests.ts",
    "./support/background-stub.ts",
    "./support/customize.ts",
    "./support/polyfills.ts",
    "./support/test-utils.ts",
    "./types/karma-rollup-preprocessor.d.ts",
    "./types/karma.d.ts",
    "./types/rollup-plugin-istanbul2.d.ts",
    "./utils/url.tests.ts",
  ],
}
`;

exports[`TypeScript project config file should parse and resolve correctly: tests/unit 1`] = `
Object {
  "compileOnSave": false,
  "compilerOptions": Object {
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "inlineSourceMap": true,
    "lib": Array [
      "esnext",
      "dom",
    ],
    "module": "commonjs",
    "noImplicitAny": true,
    "skipLibCheck": true,
    "target": "esnext",
    "types": Array [
      "node",
      "jest",
      "jest-extended",
    ],
  },
  "files": Array [
    "./config/config.tests.ts",
    "./config/locales.tests.ts",
    "./generators/utils/parse.tests.ts",
    "./utils/color.tests.ts",
    "./utils/math.tests.ts",
    "./utils/parsing.tests.ts",
    "./utils/promise-barrier.tests.ts",
    "./utils/text.tests.ts",
    "./utils/time.tests.ts",
    "./utils/uid.tests.ts",
  ],
}
`;
